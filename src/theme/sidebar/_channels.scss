@use 'backend' as *;

#{c(main visualRefresh)} {
  // CHANNELS BACKGROUND
  #{c(sidebar list)} {
    margin-bottom: var(--custom-app-panels-height);
    border-top-left-radius: 10px;
    border: none;
  }
  #{c(sidebar server container)} {
    background: hsl(from cv('shading.bg') h s l/calc(cv('shading.percent') * 0.2));
    padding: 0;
  }

  // HEADER
  #{c(sidebar server header clickable)},
  #{c(sidebar server header header)} {
    background: transparent;
  }

  // HEADER - COMMUNITY/BANNER
  :is(#{c(sidebar server header communityInfoVisible)}, #{c(sidebar server header hasBanner)}) {
    #{c(sidebar server header header)} {
      background-color: transparent;
    }
  }
  #{c(sidebar server header bannerContainer)} {
    background-color: transparent;
    border: none;
  }

  // UNREAD PILL
  #{c(sidebar server channel unreadPill)} {
    filter: drop-shadow(0.5px 0 3px cv('color.main'));
  }

  // UNREAD BAR
  #{c(sidebar server unreadBar bar)} {
    background-color: cv('color.main');
    border-color: cv('color.main');
  }
  #{c(sidebar server unreadBar unreadIcon)},
  #{c(sidebar server unreadBar text)} {
    color: var(--button-filled-brand-text) !important; //inline style
  }
}


// THREAD SPINE
#{c(sidebar server channel threadsSpine)} {
  color: cv('color.main');
}

// CHANNEL CONTENT
#{c(sidebar server channel link)} {
  transition: all 0.15s ease-in-out;
  margin-left: 4px;
  &::before {
    top: 0;
    right: 100%;
    bottom: 0;
    left: 0;
    transition: all 0.15s ease-in-out;
    z-index: -1;
    border-radius: 4px;
  }
}
#{c(sidebar server channel icon)} {
  width: 18px;
  height: 18px;
  margin-right: 3px;
  transition: all 0.15s ease-in-out;
}
#{c(sidebar server channel name)},
%channelActionIcon {
  transition: all 0.15s ease-in-out;
}
#{c(sidebar server channel wrapper)} {
  // HOVER
  &:hover {
    #{c(sidebar server channel link)} {
      background: cv('shading.hover');
    }
  }
  // UNREAD
  &#{c(sidebar server channel unread)} {
    #{c(sidebar server channel name)} {
      color: cv('color.main');
      text-shadow: 0 0 3px;
    }
    #{c(sidebar server channel icon)} {
      color: cv('color.main');
      filter: drop-shadow(0 0 3px);
    }
    &:hover {
      :is(#{c(sidebar server channel name)}, #{c(sidebar server channel icon)}) {
        color: cv('color.hover');
      }
    }
  }
  // SELECTED
  &#{c(sidebar server channel selected)} {
    #{c(sidebar server channel link)} {
      background-color: transparent;
      &::before {
        right: 0;
        background: cv('color.main');
        animation: cv-channel-select 0.3s ease-in-out;
      }
    }
  }

  // CONNECTED
  &#{c(sidebar server channel connected)} {
    #{c(sidebar server channel name)} {
      color: cv('color.main');
      text-shadow: 0 0 3px;
    }
    #{c(sidebar server channel icon)} {
      color: cv('color.main');
      filter: drop-shadow(0 0 3px);
    }
  }
}
