@use 'backend' as *;

// HEADER
#{c(chat chatAvatar)} {
  transition:
    all 0.3s ease-in-out,
    transform 0.1s ease-in-out;
  &#{c(chat chatHeaderClickable)}:active {
    transform: scale(0.9);
  }
}

// REPLY
#{c(chat replied spine)} {
  border-color: cv('color.main');
  #{c(chat replied contentHovered)} {
    border-color: cv('color.hover');
  }
}
#{c(chat replied textPreview)} {
  color: cv('text.normal');
  opacity: 0.7;
  #{c(chat chatHeaderClickable)}:hover,
  #{c(chat replied spineHovered)} {
    opacity: 1;
  }
}

// EXECUTE COMMAND
#{c(chat replied executedCommand)} {
  #{c(chat replied commandName)} {
    color: cv('color.main');
    background: transparent;
    &:hover {
      color: cv('color.hover');
      background: transparent;
    }
  }
}

// MENTION
#{c(chat mentionWrapper)} {
  background-color: cv('color.main');
  color: cv('text.normal');
  border-radius: 5px;
  padding: 0 4px;
  &:hover {
    background-color: cv('color.hover');
  }
}

// MENTIONED BG
#{c(chat mentioned)} {
  --background-mentioned: hsl(from var(--hsl-main-color) h s l/.1);
  --background-mentioned-hover: hsl(from var(--hsl-hover-color) h s l/.1);
  &:before {
    background-color: cv('color.main');
  }
}

// QUOTES
#{c(chat quoteContainer)} {
  #{c(chat quoteDivider)} {
    border-radius: 0;
  }
}

// LINKS
#{c(main anchorLink)} {
  #{c(chat systemMessageContent)} &,
  #{c(chat markup)} &,
  & {
    color: cv('color.main');
  }
}

// EMBEDS
#{c(main visualRefresh)} {
  #{c(embeds embedFull)} {
    background: cv('shading.card');
    border: none;
    border-left: 4px solid var(--border-normal);
  }

  // INVITE
  #{c(embeds invite wrapper)} {
    background: cv('shading.card');
    border: none;
  }
  #{c(embeds invite statusOnline)} {
    background: cv('color.online');
  }
  #{c(embeds invite statusOffline)} {
    background: cv('color.offline');
  }

  // GIFTS
  #{c(embeds gift tile)} {
    background: cv('shading.card');
    border: none;
    &:hover {
      background: cv('shading.card');
    }
  }

  // MEDIA
  #{c(embeds media audioWrapper)} {
    background: cv('shading.card');
    border: none;
  }
  #{c(embeds media audioControls)} {
    background: transparent;
  }

  // TEXT CONTAINER
  #{c(embeds textContainer textContainer)},
  #{c(embeds textContainer footer)} {
    background: cv('shading.card');
    border: none;
  }
  #{c(embeds textContainer languageSelectorPopout)} {
    background: cv('shading.popout');
  }
  #{c(embeds textContainer modalTextContainer)} {
    background: transparent;
    border: none;
  }

  // HAS THREAD
  #{c(chat cozy)} {   // doesnt actually need visual-refresh
    &#{c(chat hasThread)} {  // cozy view
      &::after {
        border-color: cv('color.main');
      }
    }
  }
  #{c(embeds threadContainer)} { // compact view
    border-color: cv('color.main');
  }
  #{c(embeds threadContainer)} {
    background: cv('shading.card');
    border: none;
  }
  #{c(embeds threadCTA)} {
    color: cv('color.main');
  }

  // VOICE MESSAGE
  #{c(embeds voiceMessage container)} {
    background: cv('shading.card');
    border: none;
  }
}
#{c(embeds voiceMessage ripple)} {
  background: cv('color.main');
}
:is(#{c(main themeLight)}, #{c(main themeDark)}) {
  #{c(embeds voiceMessage container)} {
    &:not(#{c(embeds voiceMessage playing)}) {
      #{c(embeds voiceMessage playButtonContainer)} {
        background: cv('color.main');
        &:is(:hover, :active) {
          background: cv('color.hover');
        }
      }
    }
  }
}
#{c(embeds voiceMessage playing)} {
  #{c(embeds voiceMessage playIcon)} {
    color: cv('color.main');
  }
}

// AUTOMOD
#{c(embeds automod card)},
#{c(embeds automod footerContainer)} {
  background: cv('shading.card');
}
#{c(embeds automod dot)} {
  background: transparent;
}

// EMBED DOWNLOAD BUTTON
#{c(embeds hoverButton group)} {
  background: cv('shading.popout');
}
#{c(embeds hoverButton button)} {
  color: cv('color.main');
  &#{c(embeds hoverButton selected)},
  &:hover {
    color: cv('color.hover');
    background: transparent;
  }
}